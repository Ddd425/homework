week2--linux中的文件
1）inode的理解
 储存文件的元信息的地方，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名为"索引节点"。
每个文件都对应一个inode。
2)inode的内容
* 文件的字节数
* 文件拥有者的User ID
* 文件的Group ID
* 文件的读、写、执行权限
* 文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间。
* 链接数，即有多少文件名指向这个inode
* 文件数据block的位置
----可用stat命令查看
3）inode的大小
一般为128或256字节。一般是每1KB或每2KB就设置一个inode。
4）inode号码
每个inode都有一个号码，操作系统用inode号码来识别不同的文件。
Unix/Linux系统内部不使用文件名，而使用inode号码来识别文件。对于系统来说，文件名只是inode号码便于识别的别称或者绰号。
读取数据流程：首先，系统找到这个文件名对应的inode号码；其次，通过inode号码，获取inode信息；最后，根据inode信息，找到文件数据所在的block，读出数据。
每个inode号码对应一个文件名。但是，Unix/Linux系统允许，多个文件名指向同一个inode号码。创建目录时，默认会生成两个目录项："."和".."。前者的inode号码就是当前目录的inode号码，等同于当前目录的"硬链接"；后者的inode号码就是当前目录的父目录的inode号码，等同于父目录的"硬链接"。
5）Linux下进程最大数目
段寄存器中用作GDT表下标的位段宽度是13位，所以GDT中可以有213=8192213=8192个描述项。
除一些系统的开销(例如GDT中的第2项和第3项分别用于内核 的代码段和数据段，第4项和第5项永远用于当前进程的代码段和数据段，第1项永远是0，等等)以外，尚有8180个表项可供使用，所以理论上系统中最大的 进程数量是8180/2=40908180/2=4090。
所以系统中理论上最大的进程数是4090
6）Linux的一切皆文件
Linux的一切皆文件是指，Linux世界中的所有、任意、一切东西都可以通过文件的方式访问、管理。
使用lsof -p [pid]的方式就可以查看对应的进程都打开了什么文件，而其中的type字段就是表明它是什么类型，通过man losf 命令你可以查看到它有下面这么多种。
proc目录可以看到上面有很多以数字为名称的目录，而这些目录就对应每一个进程。
使用ps -ef|grep nginx可以找到Nginx主进程的PID是2175
fd目录，里面是此进程打开的文件的情况，每个均链接至实际的文件或设备
limits，内容是此进程的系统限制信息
stack，此进程的内核调用栈信息
man 5 proc命令会输出/proc目录的帮助信息，它里面包含/proc/[pid]目录中每个目录和文件的说明信息
7）文件描述符
文件系统是操作系统用于明确存储设备（常见的是磁盘，也有基于NAND Flash的固态硬盘）或分区上的文件的方法和数据结构；即在存储设备上组织文件的方法。
Unix可以把一个能随机存取的存储介质（如：硬盘、软盘和光盘）上的存储空间划分成一致多个区域，每个区域都可以像独立的物理设备一样单独进行管理和数 据存取，这样的存储区域，即是逻辑设备。在逻辑设备上按照一定的格式进行划分，就构成了逻辑文件系统，简称文件系统。
普通文件 这种文件包含了某种形式的数据,这些数据无论是文件还是二进制对于 UNIX 内核而言都是一样的。对普通文件内容的解释有处理该文件的应用程序进行。
目录文件 目录文件包含了其他文件的名字以及指向与这些文件有关信息的指针。对一个目录文件具有读权限的任一进程都可以读取该目录的内容,但是只有内核才能直接写目录文件。
块特殊文件 这种文件类型提供对设备带缓冲的访问,每次访问以固定长度为单位进行。
字符特殊文件 这种文件类型提供对设备不带缓冲的访问,每次访问长度可变。系统中的所有设备要么是字符特殊文件,要么是块特殊文件。
FIFO 这种类型文件用于进程间通信。也称为命名管道(namedpipe)。
套接字(socket) 这种文件类型用于进程间的网络通信。
符号链接(symbolic link) 这种文件类型指向另一个文件。