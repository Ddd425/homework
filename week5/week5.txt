流缓冲
每一个流都有一个输出缓冲区，写入流的字符并不立即写道文件中，而先在缓冲区中聚为一块。然后异步地一块为单位传送到文件。
从流读出的字符也不是逐个地从文件中读出，而是以块为单位冲文件读到缓冲区，然后从缓冲区传送给进程。这种处理方式为缓冲。
目的是减少调用低级I/o函数的次数。因为这些函数是系统调用，费时。
利用缓冲处理者不必为读写字符而与外部设备频繁的打交道。同时还可以实现异步I/O，即在cpu运行程序的同时从外设传输数据，从而提高输入输出的效率。
流有三种不同的缓冲类型；
1）全缓冲，i/o操作每次一整个缓冲区为单位读写数据，大小一般为BUFSIZ。输出时，当缓冲区满了时才能传送它至文件，输入时，每次从文件读入数据直至缓冲区满为止。磁盘文件全缓冲。
2）行缓冲，仅当输入输出遇到换行符时才执行i/o操作。一般用于终端之类的交互设备的流。
3）无缓冲，流不设置缓冲区，字符单个的读出或写入。
UNIX对新打开流采用如下默认缓冲类型；
1.标准错误流无缓冲。
2.其他的流引用交互设s备为行缓冲，否则为全缓冲。